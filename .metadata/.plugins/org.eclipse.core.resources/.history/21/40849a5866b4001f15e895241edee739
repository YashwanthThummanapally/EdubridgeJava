package java8features;

@FunctionalInterface
interface MyFunctionalInterface {
	void greet(String name);
}

@FunctionalInterface
interface MyFunctionalInterface2 {
	int findSquare(int num);
}

interface MyFunctionalInterface3 {
	int sum(int num1, int num2);
}

public class LambdaExpressions {
	public static void main(String[] args) {
//		MyFunctionalInterface myFun = () -> System.out.println("Hello...");
//		myFun.greet();
	
		MyFunctionalInterface myFun = (String name) -> System.out.println("Hello... "+name);
		myFun.greet("Ravi");
		
		MyFunctionalInterface2 myFun2 = (int num) -> num*num;
		int square = myFun2.findSquare(10);
		System.out.println(square);
		
		MyFunctionalInterface3 myFun3 = (int a, int b) -> a+b; // The target type of this expression must be a functional interface
		int sum = myFun3.sum(10, 20);
		System.out.println(sum);
	}
}